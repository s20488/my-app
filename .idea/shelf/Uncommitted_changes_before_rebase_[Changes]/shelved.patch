Index: src/components/Profile/MyPosts/MyPosts.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let messagesElements = props.posts.map(m => <Post message={m.message} likesCount={m.likesCount}/>\r\n    );\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = () => {\r\n        props.addPost();\r\n        props.updateNewPostText(\"\");\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return <div className={s.postBlock}>\r\n        <h3>My post</h3>\r\n        <div>\r\n            <div>\r\n                <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPost}>Add post</button>\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {messagesElements}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Profile/MyPosts/MyPosts.jsx b/src/components/Profile/MyPosts/MyPosts.jsx
--- a/src/components/Profile/MyPosts/MyPosts.jsx	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
+++ b/src/components/Profile/MyPosts/MyPosts.jsx	(date 1669981496651)
@@ -1,22 +1,22 @@
 import React from "react";
 import s from './MyPosts.module.css';
 import Post from "./Post/Post";
+import {addPostActionCreator, updateNewPostTextActionCreator} from "../../../redux/state";
 
 const MyPosts = (props) => {
-
     let messagesElements = props.posts.map(m => <Post message={m.message} likesCount={m.likesCount}/>
     );
 
     let newPostElement = React.createRef();
 
     let addPost = () => {
-        props.addPost();
-        props.updateNewPostText("");
+        props.dispatch(addPostActionCreator());
     }
 
     let onPostChange = () => {
         let text = newPostElement.current.value;
-        props.updateNewPostText(text);
+        let action = updateNewPostTextActionCreator(text);
+        props.dispatch(action);
     }
 
     return <div className={s.postBlock}>
Index: src/components/Profile/Profile.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo />\r\n        <MyPosts posts={props.profilePage.posts}\r\n                 newPostText={props.profilePage.newPostText}\r\n                 updateNewPostText={props.updateNewPostText}\r\n                 addPost={props.addPost}/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Profile/Profile.jsx b/src/components/Profile/Profile.jsx
--- a/src/components/Profile/Profile.jsx	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
+++ b/src/components/Profile/Profile.jsx	(date 1669975499160)
@@ -7,8 +7,7 @@
         <ProfileInfo />
         <MyPosts posts={props.profilePage.posts}
                  newPostText={props.profilePage.newPostText}
-                 updateNewPostText={props.updateNewPostText}
-                 addPost={props.addPost}/>
+                 dispatch={props.dispatch}/>
     </div>
 }
 
Index: src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport {Routes, Route, BrowserRouter} from \"react-router-dom\";\r\n\r\nfunction App(props) {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className='app-wrapper'>\r\n                <Header />\r\n                <Navbar state={props.state.dialogsPage.sidebar}/>\r\n                <div class='app-wrapper-content'>\r\n                    <Routes>\r\n                        {/*Для React v6: вместо exact ставим *  для дочерних URL-адресов*/}\r\n                        <Route path=\"/dialogs/*\" element={<Dialogs state={props.state.dialogsPage}/>}/>\r\n                        <Route path=\"/profile/*\" element={<Profile profilePage={props.state.profilePage}\r\n                                                                   updateNewPostText={props.updateNewPostText}\r\n                                                                   addPost={props.addPost}/>}/>\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.js b/src/App.js
--- a/src/App.js	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
+++ b/src/App.js	(date 1669975445329)
@@ -17,8 +17,7 @@
                         {/*Для React v6: вместо exact ставим *  для дочерних URL-адресов*/}
                         <Route path="/dialogs/*" element={<Dialogs state={props.state.dialogsPage}/>}/>
                         <Route path="/profile/*" element={<Profile profilePage={props.state.profilePage}
-                                                                   updateNewPostText={props.updateNewPostText}
-                                                                   addPost={props.addPost}/>}/>
+                                                                   dispatch={props.dispatch}/>}/>
                     </Routes>
                 </div>
             </div>
Index: src/redux/state.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import avatar from '../avatar.jpg'\r\n\r\nlet store = {\r\n    _state: {\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Carl', img: avatar},\r\n                {id: 2, name: 'Viktor', img: avatar},\r\n                {id: 3, name: 'Leo', img: avatar}\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'Hi'},\r\n                {id: 3, message: 'Hi'}\r\n            ],\r\n            sidebar: [\r\n                {id: 1, name: 'Carl', img: avatar},\r\n                {id: 2, name: 'Viktor', img: avatar},\r\n                {id: 3, name: 'Leo', img: avatar}\r\n            ]\r\n        },\r\n\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n                {id: 2, message: 'Its my first post.', likesCount: 11}\r\n            ],\r\n            newPostText: 'test'\r\n        },\r\n    },\r\n    getState() {\r\n      return this._state;\r\n    },\r\n    rerenderEntireTree() {\r\n        console.log('State changed')\r\n    },\r\n    addPost() {\r\n        let newPost = {\r\n            id: 5,\r\n            message: this._state.profilePage.newPostText,\r\n            likesCount: 0\r\n        }\r\n\r\n        this._state.profilePage.posts.push(newPost);\r\n        this._state.profilePage.newPostText = '';\r\n        this.rerenderEntireTree(this._state);\r\n    },\r\n    updateNewPostText(newText) {\r\n        this._state.profilePage.newPostText = newText;\r\n        this.rerenderEntireTree(this._state);\r\n    },\r\n    subscribe(observer) {\r\n        this.rerenderEntireTree = observer;\r\n    }\r\n}\r\n\r\nwindow.store = store;\r\n\r\nexport default store;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/redux/state.js b/src/redux/state.js
--- a/src/redux/state.js	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
+++ b/src/redux/state.js	(date 1669987700349)
@@ -1,5 +1,8 @@
 import avatar from '../avatar.jpg'
 
+const ADD_POST = 'ADD-POST';
+const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';
+
 let store = {
     _state: {
         dialogsPage: {
@@ -13,11 +16,6 @@
                 {id: 2, message: 'Hi'},
                 {id: 3, message: 'Hi'}
             ],
-            sidebar: [
-                {id: 1, name: 'Carl', img: avatar},
-                {id: 2, name: 'Viktor', img: avatar},
-                {id: 3, name: 'Leo', img: avatar}
-            ]
         },
 
         profilePage: {
@@ -27,33 +25,45 @@
             ],
             newPostText: 'test'
         },
+
+        sidebar:
+            [
+            {id: 1, name: 'Carl', img: avatar},
+            {id: 2, name: 'Viktor', img: avatar},
+            {id: 3, name: 'Leo', img: avatar}
+        ]
     },
+    callSubscriber() {
+        console.log('State changed')
+    },
+
     getState() {
       return this._state;
     },
-    rerenderEntireTree() {
-        console.log('State changed')
+    subscribe(observer) {
+        this.callSubscriber = observer;
     },
-    addPost() {
-        let newPost = {
-            id: 5,
-            message: this._state.profilePage.newPostText,
-            likesCount: 0
-        }
+
+    dispatch(action) {
+        if (action.type === 'ADD-POST') {
+            let newPost = {
+                id: 5,
+                message: this._state.profilePage.newPostText,
+                likesCount: 0
+            }
 
-        this._state.profilePage.posts.push(newPost);
-        this._state.profilePage.newPostText = '';
-        this.rerenderEntireTree(this._state);
-    },
-    updateNewPostText(newText) {
-        this._state.profilePage.newPostText = newText;
-        this.rerenderEntireTree(this._state);
-    },
-    subscribe(observer) {
-        this.rerenderEntireTree = observer;
+            this._state.profilePage.posts.push(newPost);
+            this._state.profilePage.newPostText = '';
+            this.callSubscriber(this._state);
+        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {
+            this._state.profilePage.newPostText = action.newText;
+            this.callSubscriber(this._state);
+        }
     }
 }
 
-window.store = store;
+export const addPostActionCreator = () => ({type: ADD_POST});
+
+export const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text});
 
 export default store;
\ No newline at end of file
Index: src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport './index.css';\r\nimport store from \"./redux/state\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nlet rerenderEntireTree = (state) => {\r\n    root.render(\r\n        <React.StrictMode>\r\n            <App state={state} addPost={store.addPost.bind(store)} updateNewPostText={store.updateNewPostText.bind(store)}/>\r\n        </React.StrictMode>);\r\n};\r\n\r\nrerenderEntireTree(store.getState());\r\n\r\nstore.subscribe(rerenderEntireTree);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.js b/src/index.js
--- a/src/index.js	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
+++ b/src/index.js	(date 1669976787419)
@@ -9,7 +9,7 @@
 let rerenderEntireTree = (state) => {
     root.render(
         <React.StrictMode>
-            <App state={state} addPost={store.addPost.bind(store)} updateNewPostText={store.updateNewPostText.bind(store)}/>
+            <App state={state} dispatch={store.dispatch.bind(store)}/>
         </React.StrictMode>);
 };
 
Index: src/App.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.test.js b/src/App.test.js
deleted file mode 100644
--- a/src/App.test.js	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
+++ /dev/null	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
@@ -1,8 +0,0 @@
-import { render, screen } from '@testing-library/react';
-import App from './App';
-
-test('renders learn react link', () => {
-  render(<App />);
-  const linkElement = screen.getByText(/learn react/i);
-  expect(linkElement).toBeInTheDocument();
-});
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"Eslint\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 6e41a1dfc91d181facc6d6e116ac6d984ce4abe6)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1669980906542)
@@ -2,5 +2,15 @@
   <profile version="1.0">
     <option name="myName" value="Project Default" />
     <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="HtmlUnknownAttribute" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="myValues">
+        <value>
+          <list size="1">
+            <item index="0" class="java.lang.String" itemvalue="class" />
+          </list>
+        </value>
+      </option>
+      <option name="myCustomValuesEnabled" value="true" />
+    </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
